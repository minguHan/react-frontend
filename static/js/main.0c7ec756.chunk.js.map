{"version":3,"sources":["components/TestComponent.jsx","components/MainComponent.jsx","components/DashboardComponent.jsx","components/MemberComponent.jsx","components/DataGrid.jsx","components/Test.jsx","components/TopMenuComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["selRow","MainComponentCalss","props","getApi","axios","get","then","res","console","log","setState","message","data","catch","error","state","this","Component","DashboardComponent","columns","dataField","text","sort","formatter","cell","row","onSale","style","color","defaultSorted","order","RemoteTable","page","sizePerPage","onTableChange","options","totalSize","onPageChange","onSizePerPageChange","remote","keyField","pagination","PaginationFactory","rowEvents","noDataIndication","striped","hover","condensed","bordered","headerWrapperClasses","handleClick","event","name","price","attributes","className","disabledClassName","dividerClassName","selectedClassName","RemotePagination","custom","paginationProps","paginationTableProps","role","onClick","handleNextPage","handlePrevPage","handleSizePerPage","newSizePerPage","e","rowIndex","onContextMenu","x","clientX","y","clientY","showMenu","position","id","preventDefault","onMouseEnter","TestComponent","useState","setData","loading","setLoading","setPage","setSizePerPage","setTotalSize","origin","setOrigin","useEffect","a","onClickBtn","fetchData","choice","sortField","sortOrder","type","currentIndex","result","quantity","items","i","push","productsGenerator","b","slice","width","value","variant","action","divider","ContextMenuTrigger","products_data","MemberComponent","products","handleTableChange","setTimeout","RemoteTableMenu","menuId","menuItems","menuOnClick","map","DataGrid","menuCallBack","axiosConfig","setSelRow","selRowEvents","propTypes","PropTypes","string","isRequired","array","func","object","Test","useParams","coins","setCoins","getApiCall","fetch","response","json","counter","setCounter","Button","backgroundColor","current","inputIdEl","useRef","inputPwEl","method","onSubmit","url","params","target","password","ref","onChange","class","length","coin","symbol","quotes","USD","filter","firstName","lastName","TopMenuComponent","hstyle","Navbar","bg","Toggle","aria-controls","Collapse","Nav","Link","href","NavDropdown","title","Item","Divider","exact","path","component","MainComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c7ec756.chunk.js","sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\n\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport PaginationFactory, {PaginationProvider, PaginationListStandalone} from 'react-bootstrap-table2-paginator';\nimport { ContextMenu, MenuItem, showMenu } from \"react-contextmenu\";\n\n\nconst productsGenerator = (quantity) => {\n\tconst items = [];\n\tfor (let i = 0; i < quantity; i++) {\n\t  items.push({ id: i, name: `Item name ${i}`, price: 2100 + i });\n\t}\n\treturn items;\n}\n\nconst columns = [{\n\tdataField: 'id',\n\ttext: 'Product ID',\n\tsort: true\n  }, {\n\tdataField: 'name',\n\ttext: 'Product Name',\n\tsort: true\n  }, {\n\tdataField: 'price',\n\ttext: 'Product Price',\n\tsort: true,\n\tformatter: function(cell, row){\n\t\tif (row.onSale) {\n\t\t  return (\n\t\t\t<span>\n\t\t\t  <strong style={ { color: 'red' } }>$ { cell } NTD(Sales!!)</strong>\n\t\t\t</span>\n\t\t  );\n\t\t}\n\t  \n\t\treturn (\n\t\t  <span>$ { cell } NTD</span>\n\t\t);\n\t  }\n  }];\n  \n  const defaultSorted = [{\n\tdataField: 'id',\n\torder: 'desc'\n  }];\n\n  const RemoteTable = ({ data, page, sizePerPage, onTableChange, totalSize }) => {\n\n\tconst options = {\n\t\t// paginationSize: 5,\n\t\t// pageStartIndex: 1,\n\t\t// alwaysShowAllBtns: true, // Always show next and previous button\n\t\t// withFirstAndLast: false, // Hide the going to First and Last page button\n\t\t// hideSizePerPage: true, // Hide the sizePerPage dropdown always\n\t\t// hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n\t\t// firstPageText: 'First',\n\t\t// prePageText: 'Back',\n\t\t// nextPageText: 'Next',\n\t\t// lastPageText: 'Last',\n\t\t// nextPageTitle: 'First page',\n\t\t// prePageTitle: 'Pre page',\n\t\t// firstPageTitle: 'Next page',\n\t\t// lastPageTitle: 'Last page',\n\t\t// showTotal: true,\n\t\t// disablePageTitle: true,\n\t\t// sizePerPageList: [{\n\t\t//   text: '10', value: 10\n\t\t// }, {\n\t\t//   text: '25', value: 25\n\t\t// }, {\n\t\t//   text: '50', value: 50\n\t\t// }],\n\n\t\tpage : page, \n\t\tsizePerPage : sizePerPage, \n\t\ttotalSize : totalSize, \n\t\tonPageChange: (page, sizePerPage) => {\n\t\t  console.log('Page change!!!');\n\t\t  console.log('Newest size per page:' + sizePerPage);\n\t\t  console.log('Newest page:' + page);\n\t\t},\n\t\tonSizePerPageChange: (page, sizePerPage) => {\n\t\t\tconsole.log('Size per page change!!!');\n\t\t\tconsole.log('Newest size per page:' + sizePerPage);\n\t\t\tconsole.log('Newest page:' + page);\n\t\t}\n  \n\t  };  \n\t\n\t  return(\n\t\t<div>\n\t\t  <BootstrapTable\n\t\t\tremote\n\t\t\tkeyField=\"id\"\n\t\t\tdata={ data }\n\t\t\tcolumns={ columns }\n\t\t\tdefaultSorted={ defaultSorted }\n\t\t\tpagination={ PaginationFactory(options) }\n\t\t\trowEvents={ rowEvents } \n\t\t\tonTableChange={ onTableChange }\n\t\t\tnoDataIndication={ 'no results found' }\n\t\t\tstriped\n\t\t\thover\n\t\t\tcondensed\n\t\t\tbordered={ false }\n\t\t\theaderWrapperClasses=\"GeorgeMichael-Row\" \t\t\t\n\t\t  />\n\t\t</div>\n\t  );\t  \n  }\n\n  const styles = {\n\ttextAlign: 'center',\n\tbackgroundColor: '#CCC',\n\tpadding: 30\n  }\n  const ID = 'ID';\n  let selRow;\n  const handleClick = (event, data) => {\n\tconsole.log(`clicked`, { event, data, selRow })\n\tconsole.log(`Clicked on ${selRow.name} menu ${selRow.price}`);\n  }\n  const attributes = {\n\tclassName: 'custom-root',\n\tdisabledClassName: 'custom-disabled',\n\tdividerClassName: 'custom-divider',\n\tselectedClassName: 'custom-selected'\n  }  \n  \n  const RemotePagination = ({ data, page, sizePerPage, onTableChange, totalSize }) => (\n\t<div>\n\t  <PaginationProvider\n\t\tpagination={\n\t\t  PaginationFactory({\n\t\t\tcustom: true,\n\t\t\tpage,\n\t\t\tsizePerPage,\n\t\t\ttotalSize\n\t\t  })\n\t\t}\n\t  >\n\t\t{\n\t\t  ({\n\t\t\tpaginationProps,\n\t\t\tpaginationTableProps\n\t\t  }) => (\n\t\t\t<div>\n\t\t\t  <div>\n\t\t\t\t<p>Current Page: { paginationProps.page }</p>\n\t\t\t\t<p>Current SizePerPage: { paginationProps.sizePerPage }</p>\n\t\t\t  </div>\n\t\t\t  <div className=\"btn-group\" role=\"group\">\n                  <button className=\"btn btn-primary\" onClick={ handleNextPage(paginationProps) }>Next Page</button>\n                  <button className=\"btn btn-success\" onClick={ handlePrevPage(paginationProps) }>Prev Page</button>\n                  <button className=\"btn btn-danger\" onClick={ () => handleSizePerPage(paginationProps, 10) }>Size Per Page: 10</button>\n                  <button className=\"btn btn-warning\" onClick={ () => handleSizePerPage(paginationProps, 25) }>Size Per Page: 25</button>\n                </div>\t\t\t  \n\t\t\t  <div>\n\t\t\t\t<PaginationListStandalone\n\t\t\t\t  { ...paginationProps }\n\t\t\t\t/>\n\t\t\t  </div>\n\t\t\t\t<BootstrapTable\n\t\t\t\t\tremote\n\t\t\t\t\tkeyField=\"id\"\n\t\t\t\t\tdata={ data }\n\t\t\t\t\tcolumns={ columns }\n\t\t\t\t\tdefaultSorted={ defaultSorted }\n\t\t\t\t\tonTableChange={ onTableChange }\n\t\t\t\t\trowEvents={ rowEvents } \n\t\t\t\t\tnoDataIndication={ 'no results found' }\n\t\t\t\t\t{ ...paginationTableProps }\n\t\t\t\t\tstriped\n\t\t\t\t\thover\n\t\t\t\t\tcondensed\n\t\t\t\t\tbordered={ false }\n\t\t\t\t\theaderWrapperClasses=\"GeorgeMichael-Row\" \n\t\t\t\t/>\n\n\t\t\t</div>\n\t\t  )\n\t\t}\n\t  </PaginationProvider>\n\t</div>\n  );\n\n  const handleNextPage = ({\n    page,\n    onPageChange\n  }) => () => {\n    onPageChange(page + 1);\n  }\n\n  const handlePrevPage = ({\n    page,\n    onPageChange\n  }) => () => {\n    onPageChange(page - 1);\n  }\n\n  const handleSizePerPage = ({\n    page,\n    onSizePerPageChange\n  }, newSizePerPage) => {\n    onSizePerPageChange(newSizePerPage, page);\n  }\n  \n  const rowEvents = {\n\tonClick: (e, row, rowIndex) => {\n\t\tconsole.log(row);\n\t\t// console.log(`clicked on row with index: ${row}`);\n\t\t// console.log(`clicked on row with index: ${rowIndex}`);\n\t},\n\tonContextMenu: (e, row, rowIndex) => {\n\n\t\tselRow = row;\n\t\tconsole.log(row);\n\t\tconsole.log(`context on row with index: ${row}`);\n\t\tconsole.log(`context on row with index: ${rowIndex}`);\n\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\t\n\t\tshowMenu({\n\t\t  position: { x, y },\n\t\t  id: \"ID\"\n\t\t  });\t\t\n\n\t\te.preventDefault();\n\t\t\n\t},\n\tonMouseEnter: (e, row, rowIndex) => {\n\t//   console.log(`enter on row with index: ${rowIndex}`);\n\t},\n  };\n\nconst TestComponent = () => {\n\tconst [data, setData] = useState({});\n\tconst [loading, setLoading] = useState(false);\n\n\tconst [page, setPage] = useState(1);\n\tconst [sizePerPage, setSizePerPage] = useState(10);\n\tconst [totalSize, setTotalSize] = useState(101);\n\tconst [origin, setOrigin] = useState([]);\n\tconst [selRow, setSelRow] = useState([]);\n  \n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t  try {\t\t  \n\t\t\tawait onClickBtn(\"init\");\n\t\t  } catch (error) {\n\t\t\tconsole.error(error)\n\t\t  }\n\t\t  setLoading(false);\n\t\t};\n\t\n\t\tfetchData();\n\t  }, []);\n\t\n    // const getApi = (choice) => {\n    //     axios.get(\"/api/hello\")\n    //         .then(res => {\n    //             console.log(choice,res);\n\t// \t\t\tsetData(res.data);\n\n    //         }).catch(console.error);\n    // }\n\n    const onClickBtn = (choice) => () => {\n\t\tgetApi(choice, { page: 1, sizePerPage: 10, sortField: \"id\", sortOrder: \"desc\" });\n    };    \n    \n\n\tconst getApi = (type, { page, sizePerPage, sortField, sortOrder }) => {\n\t\tconst currentIndex = (page - 1) * sizePerPage;\n\t\tconsole.log(type, page, sizePerPage, sortField, sortOrder);\n\n        axios.get(\"/api/hello\")\n            .then(res => {\n                console.log(type,res);\n\t\t\t\tsetData(res.data);\n\t\t\t\tsetPage(page);\n\t\t\t\tsetSizePerPage(sizePerPage);\n\t\t\t\tsetTotalSize(220);\n\t\n\t\t\t\tlet result = productsGenerator(100);\n\t\t\t\tconsole.log(result);\n\t\t\t\tif (sortOrder === 'asc') {\n\t\t\t\t\tresult = result.sort((a, b) => {\n\t\t\t\t\t  if (a[sortField] > b[sortField]) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t  } else if (b[sortField] > a[sortField]) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t  }\n\t\t\t\t\t  return 0;\n\t\t\t\t\t});\n\t\t\t\t  } else {\n\t\t\t\t\tresult = result.sort((a, b) => {\n\t\t\t\t\t  if (a[sortField] > b[sortField]) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t  } else if (b[sortField] > a[sortField]) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t  }\n\t\t\t\t\t  return 0;\n\t\t\t\t\t});\n\t\t\t\t  }\n\t\n\t\t\t\tresult = result.slice(currentIndex, currentIndex + sizePerPage)\n\t\t\t\tconsole.log(result);\n\t\t\t\tsetOrigin(result);\n\t\t\t\t\n\t\n            }).catch(console.error);\n\n\t  }\n\n        return (\n            <div>\n    <div>\n    {loading && <div>Loading</div>}\n    {!loading && (\n      <div>\n        {data.message}\n        {page}\n        {sizePerPage}\n      </div>\n    )}\n    </div>\n\n                <div id=\"AXPage\">\t\n                    <div className=\"H60\"></div>\n                    <div className=\"ax-body\">\n                        <div className=\"ax-wrap\">\t\t\t\n                            <div className=\"ax-layer\">\n                                <div className=\"ax-col-12 ax-content\">\n                                    <div id=\"CXPage\">\n                                        <div className=\"ax-layer\">\n                                            <div className=\"ax-col-12\">\n                                                <div className=\"ax-unit\">\n                                                    <div className=\"ax-box sample-01\">\n                                                        <div className=\"ax-box-wrap\">\n\n<table className=\"AXSearchTable\">\n<colgroup>\n<col width=\"100\" />\n<col width=\"*\" />\n</colgroup>\n<tbody>\t\t\t\t\t\t\t\t                        \n\t<tr className=\"gray\">\t\t\t\t\t\t\t\t                            \n\t\t<th className=\"W100\"><div className=\"tdRel\">회사구분</div></th>\n\t\t<td className=\"W100\">\n\t\t\t<div className=\"tdRel\">\n\t\t\t\t<select name=\"gubun\" id=\"gubun\" className=\"AXSelect\">\n\t\t\t\t\t<option value=\"\">전체</option>\n\t\t\t\t\t<option value=\"대행사\">대행사</option>\n\t\t\t\t\t<option value=\"랩사\">랩사</option>\n\t\t\t\t\t<option value=\"매체\">매체</option>\n\t\t\t\t\t<option value=\"관리자\">관리자</option>\n\t\t\t\t\t<option value=\"테스트\">테스트</option>\n\t\t\t\t\t<option value=\"기타\">기타</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</td>\n\t\t<th className=\"W100\"><div className=\"tdRel\">계약유무</div></th>\n\t\t<td className=\"W100\">\n\t\t\t<div className=\"tdRel\">\n\t\t\t\t<select name=\"contract\" id=\"contract\" className=\"AXSelect\">\n\t\t\t\t\t<option value=\"\">전체</option>\n\t\t\t\t\t<option value=\"Y\">계약</option>\n\t\t\t\t\t<option value=\"N\">미계약</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</td>\n\t\t<th className=\"W100\"><div className=\"tdRel\">사용여부</div></th>\n\t\t<td className=\"W100\">\n\t\t\t<div className=\"tdRel\">\n\t\t\t\t<select name=\"useyn\" id=\"useyn\" className=\"AXSelect\">\n\t\t\t\t\t<option value=\"\">전체</option>\n\t\t\t\t\t<option value=\"Y\">사용</option>\n\t\t\t\t\t<option value=\"N\">미사용</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</td>\n\t\t<th className=\"W100\"><div className=\"tdRel\">검색대상</div></th>\n\t\t<td className=\"last\">\n\t\t\t<div className=\"tdRel\">\n\t\t\t\t<select name=\"searchKey\" id=\"searchKey\" className=\"AXSelect\">\n\t\t\t\t\t<option value=\"\">전체</option>\t\t\t\t\t\t\t\t                                    \t\n\t\t\t\t\t<option value=\"membername\">회사명</option>\n\t\t\t\t\t<option value=\"memberid\">아이디</option>\n\t\t\t\t\t<option value=\"clientip\">아이피</option>\n\t\t\t\t</select>\n\t\t\t\t<input type=\"text\" name=\"searchVal\" id=\"searchVal\" className=\"AXInput W150\" />\n\t\t\t</div>\n\t\t</td>\n\t</tr>\n</tbody>\n</table>\n\t\t\t\t\t\t\t\t\t\t\n<div className=\"ax-button-group\">\n    <div className=\"right\">\n    \t<button onClick={onClickBtn('등록')} type=\"button\" className=\"AXButton Blue addBtn\" id=\"ax-grid-btn-regist\"><i className=\"fa fa-pencil fa-lg\"></i> 신규등록</button>\n    \t<button onClick={onClickBtn('검색')} type=\"button\" className=\"AXButton Red searchBtn\" id=\"ax-grid-btn-regist\"><i className=\"fa fa-search fa-lg\"></i> 통합검색</button>\n    \t<button onClick={onClickBtn('다운')} type=\"button\" className=\"AXButton Green excelBtn\" id=\"ax-grid-btn-regist\"><i className=\"fa fa-arrow-circle-o-down fa-lg\"></i> 엑셀다운</button>\n        <Button variant=\"primary\">테스트</Button>\n    </div>                                                  \n    <div className=\"ax-clear\"></div>\n    <div className=\"H10\"></div>\n\n    <ContextMenu id={ID}>\n      <MenuItem\n        data={{ action: 'copy' }}\n        onClick={handleClick}\n        attributes={attributes}\n      >\n        Copy1\n      </MenuItem>\n      <MenuItem\n        data={{ action: 'paste' }}\n        onClick={handleClick}\n        attributes={attributes}\n      >\n        Paste\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem\n        data={{ action: 'delete' }}\n        onClick={handleClick}\n        attributes={attributes}\n      >\n        Delete\n      </MenuItem>\n    </ContextMenu>\n\n\t<RemoteTable\n        data={ origin }\n        page={ page }\n        sizePerPage={ sizePerPage }\n        totalSize={ totalSize }\n        onTableChange={ getApi }\n\t\tContextMenuTrigger={ID}\n      />\n\n\t\t<RemotePagination\n\t\t\tdata={ origin }\n\t\t\tpage={ page }\n\t\t\tsizePerPage={ sizePerPage }\n\t\t\ttotalSize={ totalSize }\n\t\t\tonTableChange={ getApi }\n\t\t\tContextMenuTrigger={ID}\n\t\t/>\n\n</div>                \n\n\n                                                            <div className=\"ax-clear\"></div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"ax-clear\"></div>\n                                                </div>\n                                            </div>\n                                        </div>\t\t\t\n                                    </div>\n                                    </div>\n                                <div className=\"ax-clear\"></div>\n                            </div>\t\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    \n}\nexport default TestComponent;","import React, { Component } from \"react\";\nimport axios from 'axios';\nclass MainComponentCalss extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.getApi();\n    }\n\n    getApi = () => {\n        axios.get(\"/api/hello\")\n            .then(res => {\n                console.log(res);\n                this.setState({\n                    message: res.data.message\n                });\n            }).catch(console.error);\n    }\n\n    render() {\n        return (\n            <div>\n                Main 페이지<br />\n                서버로부터 온 메시지: {this.state.message}\n            </div>\n        );\n    }\n}\nexport default MainComponentCalss;","import React, { Component } from \"react\";\n\nclass DashboardComponent extends Component {\n    render() {\n        return (<div>\n            Dashboard 페이지\n        </div>\n        );\n    }\n}\n\nexport default DashboardComponent;\n","import React, { useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\n\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport PaginationFactory, {PaginationProvider, PaginationListStandalone} from 'react-bootstrap-table2-paginator';\n\n\nconst productsGenerator = (quantity) => {\n\tconst items = [];\n\tfor (let i = 0; i < quantity; i++) {\n\t  items.push({ id: i, name: `Item name ${i}`, price: 2100 + i });\n\t}\n\treturn items;\n}\n\nconst columns = [{\n\tdataField: 'id',\n\ttext: 'Product ID',\n\tsort: true\n  }, {\n\tdataField: 'name',\n\ttext: 'Product Name',\n\tsort: true\n  }, {\n\tdataField: 'price',\n\ttext: 'Product Price',\n\tsort: true\n  }];\n  \n  const defaultSorted = [{\n\tdataField: 'id',\n\torder: 'desc'\n  }];\n\n  const RemoteTable = ({ data, page, sizePerPage, onTableChange, totalSize }) => {\n\n\tconst options = {\n\t\t// paginationSize: 5,\n\t\t// pageStartIndex: 1,\n\t\t// alwaysShowAllBtns: true, // Always show next and previous button\n\t\t// withFirstAndLast: false, // Hide the going to First and Last page button\n\t\t// hideSizePerPage: true, // Hide the sizePerPage dropdown always\n\t\t// hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n\t\t// firstPageText: 'First',\n\t\t// prePageText: 'Back',\n\t\t// nextPageText: 'Next',\n\t\t// lastPageText: 'Last',\n\t\t// nextPageTitle: 'First page',\n\t\t// prePageTitle: 'Pre page',\n\t\t// firstPageTitle: 'Next page',\n\t\t// lastPageTitle: 'Last page',\n\t\t// showTotal: true,\n\t\t// disablePageTitle: true,\n\t\t// sizePerPageList: [{\n\t\t//   text: '10', value: 10\n\t\t// }, {\n\t\t//   text: '25', value: 25\n\t\t// }, {\n\t\t//   text: '50', value: 50\n\t\t// }],\n\n\t\tpage : page, \n\t\tsizePerPage : sizePerPage, \n\t\ttotalSize : totalSize, \n\t\tonPageChange: (page, sizePerPage) => {\n\t\t  console.log('Page change!!!');\n\t\t  console.log('Newest size per page:' + sizePerPage);\n\t\t  console.log('Newest page:' + page);\n\t\t},\n\t\tonSizePerPageChange: (page, sizePerPage) => {\n\t\t\tconsole.log('Size per page change!!!');\n\t\t\tconsole.log('Newest size per page:' + sizePerPage);\n\t\t\tconsole.log('Newest page:' + page);\n\t\t}\n  \n\t  };  \n\t\n\t  return(\n\t\t<div>\n\t\t  <BootstrapTable\n\t\t\tremote\n\t\t\tkeyField=\"id\"\n\t\t\tdata={ data }\n\t\t\tcolumns={ columns }\n\t\t\tdefaultSorted={ defaultSorted }\n\t\t\tpagination={ PaginationFactory(options) }\n\t\t\tonTableChange={ onTableChange }\n\t\t\tnoDataIndication={ 'no results found' }\n\t\t  />\n\t\t</div>\n\t  );\t  \n  }\n\n\n  const RemotePagination = ({ data, page, sizePerPage, onTableChange, totalSize }) => (\n\t<div>\n\t  <PaginationProvider\n\t\tpagination={\n\t\t  PaginationFactory({\n\t\t\tcustom: true,\n\t\t\tpage,\n\t\t\tsizePerPage,\n\t\t\ttotalSize\n\t\t  })\n\t\t}\n\t  >\n\t\t{\n\t\t  ({\n\t\t\tpaginationProps,\n\t\t\tpaginationTableProps\n\t\t  }) => (\n\t\t\t<div>\n\t\t\t  <div>\n\t\t\t\t<p>Current Page: { paginationProps.page }</p>\n\t\t\t\t<p>Current SizePerPage: { paginationProps.sizePerPage }</p>\n\t\t\t  </div>\n\t\t\t  <div className=\"btn-group\" role=\"group\">\n                  <button className=\"btn btn-primary\" onClick={ handleNextPage(paginationProps) }>Next Page</button>\n                  <button className=\"btn btn-success\" onClick={ handlePrevPage(paginationProps) }>Prev Page</button>\n                  <button className=\"btn btn-danger\" onClick={ () => handleSizePerPage(paginationProps, 10) }>Size Per Page: 10</button>\n                  <button className=\"btn btn-warning\" onClick={ () => handleSizePerPage(paginationProps, 25) }>Size Per Page: 25</button>\n                </div>\t\t\t  \n\t\t\t  <div>\n\t\t\t\t<PaginationListStandalone\n\t\t\t\t  { ...paginationProps }\n\t\t\t\t/>\n\t\t\t  </div>\n\t\t\t\t<BootstrapTable\n\t\t\t\t\tremote\n\t\t\t\t\tkeyField=\"id\"\n\t\t\t\t\tdata={ data }\n\t\t\t\t\tcolumns={ columns }\n\t\t\t\t\tdefaultSorted={ defaultSorted }\n\t\t\t\t\tonTableChange={ onTableChange }\n\t\t\t\t\tnoDataIndication={ 'no results found' }\n\t\t\t\t\t{ ...paginationTableProps }\n\t\t\t\t/>\n\n\t\t\t</div>\n\t\t  )\n\t\t}\n\t  </PaginationProvider>\n\t</div>\n  );\n\n  const handleNextPage = ({\n    page,\n    onPageChange\n  }) => () => {\n    onPageChange(page + 1);\n  }\n\n  const handlePrevPage = ({\n    page,\n    onPageChange\n  }) => () => {\n    onPageChange(page - 1);\n  }\n\n  const handleSizePerPage = ({\n    page,\n    onSizePerPageChange\n  }, newSizePerPage) => {\n    onSizePerPageChange(newSizePerPage, page);\n  }\n  \n  let products_data = productsGenerator(100);\n\nconst MemberComponent = () => {\n\tconst [data, setData] = useState({});\n\tconst [loading, setLoading] = useState(false);\n\n\tconst [page, setPage] = useState(1);\n\tconst [sizePerPage, setSizePerPage] = useState(10);\n\tconst [products, setProducts] = useState(products_data);\n\tconst [origin, setOrigin] = useState(products.slice(0,10));\n  \n\n\tuseEffect(() => {\n\n\t\tconst fetchData = async () => {\n\t\t  try {\n\t\t\tawait getApi(1);\n\t\t  } catch (error) {\n\t\t\tconsole.error(error)\n\t\t  }\n\t\t  setLoading(false);\n\t\t};\n\t\n\t\tfetchData();\n\t  }, []);\n\t\n    const getApi = (choice) => {\n        axios.get(\"/api/hello\")\n            .then(res => {\n                console.log(choice,res);\n\t\t\t\tsetData(res.data);\n            }).catch(console.error);\n    }\n\n    const onClickBtn = (choice) => () => {\n        getApi(choice);\n    };    \n    \n\n\tconst handleTableChange = (type, { page, sizePerPage, sortField, sortOrder }) => {\n\t\tconst currentIndex = (page - 1) * sizePerPage;\n\n\t\tconsole.log(page, sizePerPage, sortField, sortOrder);\n\n\t\tsetTimeout(() => {\n\t\t\tsetPage(page);\n\t\t\tsetSizePerPage(sizePerPage);\n\n\t\t\t\n\t\t\tlet result;\n\t\t\tif (sortOrder === 'asc') {\n\t\t\t\tresult = products.sort((a, b) => {\n\t\t\t\t  if (a[sortField] > b[sortField]) {\n\t\t\t\t\treturn 1;\n\t\t\t\t  } else if (b[sortField] > a[sortField]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t  }\n\t\t\t\t  return 0;\n\t\t\t\t});\n\t\t\t  } else {\n\t\t\t\tresult = products.sort((a, b) => {\n\t\t\t\t  if (a[sortField] > b[sortField]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t  } else if (b[sortField] > a[sortField]) {\n\t\t\t\t\treturn 1;\n\t\t\t\t  }\n\t\t\t\t  return 0;\n\t\t\t\t});\n\t\t\t  }\n\n\t\t\t  result = result.slice(currentIndex, currentIndex + sizePerPage)\n\t\t\tsetOrigin(result);\n\t\t\t\n\t\t}, 100);\n\t  }\n\n        return (\n            <div>\n    <div>\n    {loading && <div>Loading</div>}\n    {!loading && (\n      <div>\n        {data.message}\n        {page}\n        {sizePerPage}\n      </div>\n    )}\n    </div>\n\n                <div id=\"AXPage\">\t\n                    <div className=\"H60\"></div>\n                    <div className=\"ax-body\">\n                        <div className=\"ax-wrap\">\t\t\t\n                            <div className=\"ax-layer\">\n                                <div className=\"ax-col-12 ax-content\">\n                                    <div id=\"CXPage\">\n                                        <div className=\"ax-layer\">\n                                            <div className=\"ax-col-12\">\n                                                <div className=\"ax-unit\">\n                                                    <div className=\"ax-box sample-01\">\n                                                        <div className=\"ax-box-wrap\">\n\n<table className=\"AXSearchTable\">\n<colgroup>\n<col width=\"100\" />\n<col width=\"*\" />\n</colgroup>\n<tbody>\t\t\t\t\t\t\t\t                        \n\t<tr className=\"gray\">\t\t\t\t\t\t\t\t                            \n\t\t<th className=\"W100\"><div className=\"tdRel\">회사구분</div></th>\n\t\t<td className=\"W100\">\n\t\t\t<div className=\"tdRel\">\n\t\t\t\t<select name=\"gubun\" id=\"gubun\" className=\"AXSelect\">\n\t\t\t\t\t<option value=\"\">전체</option>\n\t\t\t\t\t<option value=\"대행사\">대행사</option>\n\t\t\t\t\t<option value=\"랩사\">랩사</option>\n\t\t\t\t\t<option value=\"매체\">매체</option>\n\t\t\t\t\t<option value=\"관리자\">관리자</option>\n\t\t\t\t\t<option value=\"테스트\">테스트</option>\n\t\t\t\t\t<option value=\"기타\">기타</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</td>\n\t\t<th className=\"W100\"><div className=\"tdRel\">계약유무</div></th>\n\t\t<td className=\"W100\">\n\t\t\t<div className=\"tdRel\">\n\t\t\t\t<select name=\"contract\" id=\"contract\" className=\"AXSelect\">\n\t\t\t\t\t<option value=\"\">전체</option>\n\t\t\t\t\t<option value=\"Y\">계약</option>\n\t\t\t\t\t<option value=\"N\">미계약</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</td>\n\t\t<th className=\"W100\"><div className=\"tdRel\">사용여부</div></th>\n\t\t<td className=\"W100\">\n\t\t\t<div className=\"tdRel\">\n\t\t\t\t<select name=\"useyn\" id=\"useyn\" className=\"AXSelect\">\n\t\t\t\t\t<option value=\"\">전체</option>\n\t\t\t\t\t<option value=\"Y\">사용</option>\n\t\t\t\t\t<option value=\"N\">미사용</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</td>\n\t\t<th className=\"W100\"><div className=\"tdRel\">검색대상</div></th>\n\t\t<td className=\"last\">\n\t\t\t<div className=\"tdRel\">\n\t\t\t\t<select name=\"searchKey\" id=\"searchKey\" className=\"AXSelect\">\n\t\t\t\t\t<option value=\"\">전체</option>\t\t\t\t\t\t\t\t                                    \t\n\t\t\t\t\t<option value=\"membername\">회사명</option>\n\t\t\t\t\t<option value=\"memberid\">아이디</option>\n\t\t\t\t\t<option value=\"clientip\">아이피</option>\n\t\t\t\t</select>\n\t\t\t\t<input type=\"text\" name=\"searchVal\" id=\"searchVal\" className=\"AXInput W150\" />\n\t\t\t</div>\n\t\t</td>\n\t</tr>\n</tbody>\n</table>\n\t\t\t\t\t\t\t\t\t\t\n<div className=\"ax-button-group\">\n    <div className=\"right\">\n    \t<button onClick={onClickBtn('등록')} type=\"button\" className=\"AXButton Blue addBtn\" id=\"ax-grid-btn-regist\"><i className=\"fa fa-pencil fa-lg\"></i> 신규등록</button>\n    \t<button onClick={onClickBtn('검색')} type=\"button\" className=\"AXButton Red searchBtn\" id=\"ax-grid-btn-regist\"><i className=\"fa fa-search fa-lg\"></i> 통합검색</button>\n    \t<button onClick={onClickBtn('다운')} type=\"button\" className=\"AXButton Green excelBtn\" id=\"ax-grid-btn-regist\"><i className=\"fa fa-arrow-circle-o-down fa-lg\"></i> 엑셀다운</button>\n        <Button variant=\"primary\">테스트</Button>\n    </div>                                                  \n    <div className=\"ax-clear\"></div>\n    <div className=\"H10\"></div>\n\n\n\t<RemoteTable\n        data={ origin }\n        page={ page }\n        sizePerPage={ sizePerPage }\n        totalSize={ 101 }\n        onTableChange={ handleTableChange }\n      />\n\n\t<RemotePagination\n        data={ origin }\n        page={ page }\n        sizePerPage={ sizePerPage }\n        totalSize={ 101 }\n        onTableChange={ handleTableChange }\n      />\n\n\n</div>                \n\n\n                                                            <div className=\"ax-clear\"></div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"ax-clear\"></div>\n                                                </div>\n                                            </div>\n                                        </div>\t\t\t\n                                    </div>\n                                    </div>\n                                <div className=\"ax-clear\"></div>\n                            </div>\t\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    \n}\nexport default MemberComponent;","import React, { useEffect, useState} from \"react\";\nimport axios from 'axios';\n\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport PaginationFactory from 'react-bootstrap-table2-paginator';\nimport { ContextMenu, MenuItem, showMenu } from \"react-contextmenu\";\n\n\n\t//임시 데이터 샘플\n\tconst productsGenerator = (quantity) => {\n\t\tconst items = [];\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t  items.push({ id: i, name: `Item name ${i}`, price: 2100 + i });\n\t\t}\n\t\treturn items;\n\t}\n\t\n\t//메뉴 구성\n\tconst RemoteTableMenu = ({menuId, menuItems, menuOnClick}) => {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ContextMenu id={menuId}>\n\n\t\t\t\t{menuItems.map(items => (\n\t\t\t\t\t<MenuItem \n\t\t\t\t\t\tdata={items.data} \n\t\t\t\t\t\tonClick={menuOnClick}\n\t\t\t\t\t>\n\t\t\t\t\t{items.text} \n\t\t\t\t\t</MenuItem>\n\t\t\t\t))}\n\t\t\t\t</ContextMenu>\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// 테이블 구성\n\tconst RemoteTable = ({ keyField, columns, defaultSorted, data, page, sizePerPage, rowEvents, onTableChange, totalSize }) => {\n\t\n\t\tconst options = {\n\t\t\t// paginationSize: 5,\n\t\t\t// pageStartIndex: 1,\n\t\t\t// alwaysShowAllBtns: true, // Always show next and previous button\n\t\t\t// withFirstAndLast: false, // Hide the going to First and Last page button\n\t\t\t// hideSizePerPage: true, // Hide the sizePerPage dropdown always\n\t\t\t// hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n\t\t\t// firstPageText: 'First',\n\t\t\t// prePageText: 'Back',\n\t\t\t// nextPageText: 'Next',\n\t\t\t// lastPageText: 'Last',\n\t\t\t// nextPageTitle: 'First page',\n\t\t\t// prePageTitle: 'Pre page',\n\t\t\t// firstPageTitle: 'Next page',\n\t\t\t// lastPageTitle: 'Last page',\n\t\t\t// showTotal: true,\n\t\t\t// disablePageTitle: true,\n\t\t\t// sizePerPageList: [{\n\t\t\t//   text: '10', value: 10\n\t\t\t// }, {\n\t\t\t//   text: '25', value: 25\n\t\t\t// }, {\n\t\t\t//   text: '50', value: 50\n\t\t\t// }],\n\t\n\t\t\tpage : page, \n\t\t\tsizePerPage : sizePerPage, \n\t\t\ttotalSize : totalSize, \n\t\t\tonPageChange: (page, sizePerPage) => {\n\t\t\t//   console.log('Page change!!!');\n\t\t\t//   console.log('Newest size per page:' + sizePerPage);\n\t\t\t//   console.log('Newest page:' + page);\n\t\t\t},\n\t\t\tonSizePerPageChange: (page, sizePerPage) => {\n\t\t\t\t// console.log('Size per page change!!!');\n\t\t\t\t// console.log('Newest size per page:' + sizePerPage);\n\t\t\t\t// console.log('Newest page:' + page);\n\t\t\t}\n\t  \n\t\t  };  \n\t\t  return(\n\t\t\t<div>\n\t\t\t\t<BootstrapTable\n\t\t\t\t\tremote\n\t\t\t\t\tkeyField={ keyField }\n\t\t\t\t\tdata={ data }\n\t\t\t\t\tcolumns={ columns }\n\t\t\t\t\tdefaultSorted={ defaultSorted }\n\t\t\t\t\tpagination={ PaginationFactory(options) }\n\t\t\t\t\trowEvents={ rowEvents } \n\t\t\t\t\tonTableChange={ onTableChange }\n\t\t\t\t\tnoDataIndication={ 'no results found' }\n\t\t\t\t\tstriped\n\t\t\t\t\thover\n\t\t\t\t\tcondensed\n\t\t\t\t\tbordered={ false }\n\t\t\t\t\theaderWrapperClasses=\"GeorgeMichael-Row\" \t\t\t\n\t\t\t\t/>\n\t\t\t</div>\n\t\t  );\t  \n\t  }\n\nconst DataGrid = ({menuId, menuItems, menuCallBack, keyField, columns, defaultSorted, axiosConfig, setSelRow}) => {\n\n\tconst [page, setPage] = useState(1);\n\tconst [sizePerPage, setSizePerPage] = useState(10);\n\tconst [totalSize, setTotalSize] = useState(101);\n\tconst [origin, setOrigin] = useState([]);\n\n\t//최초 실행\n\tuseEffect(() => {\n\t\tconsole.log(\"rendered Grid\");\n\t}, []);\n\n\t//orgin 테이블 값 변경 시 실행 다시 렌더링\n\tuseEffect(() => {\n\t\tconsole.log(\"orgin\",origin);\n\t}, [origin]);\n\n\t//테이블 값 변경되면 페이징 처리등의 내용을 벡엔드 API 연동하여 처리\n\tconst getApi = (axiosConfig, { page, sizePerPage, sortField, sortOrder }) => {\t\t\n\t\tconst currentIndex = (page - 1) * sizePerPage;\n\n        axios(axiosConfig)\n            .then(res => {\n                console.log(axiosConfig,res);\n\t\t\t\t// setData(res.data);\n\t\t\t\tsetPage(page);\n\t\t\t\tsetSizePerPage(sizePerPage);\n\t\t\t\tsetTotalSize(101);\n\t\n\t\t\t\t//현재 setTotalSize, origin 데이터를 샘플링해서 처리하는 부분\n\t\t\t\tlet result = productsGenerator(100);\n\t\t\t\t//console.log(result);\n\t\t\t\tif (sortOrder === 'asc') {\n\t\t\t\t\tresult = result.sort((a, b) => {\n\t\t\t\t\t  if (a[sortField] > b[sortField]) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t  } else if (b[sortField] > a[sortField]) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t  }\n\t\t\t\t\t  return 0;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresult = result.sort((a, b) => {\n\t\t\t\t\t  if (a[sortField] > b[sortField]) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t  } else if (b[sortField] > a[sortField]) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t  }\n\t\t\t\t\t  return 0;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tsetOrigin(result.slice(currentIndex, currentIndex + sizePerPage));\n\t\n            }).catch(console.error);\t\t\n\t}\n\n\t//테이블 값 변경 시 처리\n\tconst onTableChange = (type, { page, sizePerPage, sortField, sortOrder }) => {\t\t\n\t\t//console.log(type, page, sizePerPage, sortField, sortOrder);\n\t\tgetApi(axiosConfig, { page, sizePerPage, sortField, sortOrder });\n\t}\t\n\n\t//테이블 row 이벤트\n    const selRowEvents = {\n\t\tonClick: (e, row, rowIndex) => {\n\t\t\t// console.log(row);\n\t\t\t// console.log(`clicked on row with index: ${row}`);\n\t\t\t// console.log(`clicked on row with index: ${rowIndex}`);\n\t\t},\n\t\tonContextMenu: (e, row, rowIndex) => {\n\t\n\t\t\tsetSelRow(row);\n\t\t\t// console.log(`context on row with index: ${row}`);\n\t\t\t// console.log(`context on row with index: ${rowIndex}`);\n\t\n\t\t\tconst x = e.clientX;\n\t\t\tconst y = e.clientY;\n\t\t\t\n\t\t\tshowMenu({\n\t\t\t  position: { x, y },\n\t\t\t  id: menuId\n\t\t\t});\t\t\n\t\n\t\t\te.preventDefault();\n\t\t\t\n\t\t},\n\t\tonMouseEnter: (e, row, rowIndex) => {\n\t\t//   console.log(`enter on row with index: ${rowIndex}`);\n\t\t},\n\t};\n\t\n\treturn (\n\t<div>\n\t\t<RemoteTableMenu menuId={ menuId } menuItems={ menuItems } menuOnClick={ menuCallBack }/>\n\t\t<RemoteTable\n\t\t\tkeyField = { keyField }\n\t\t\tcolumns={ columns }\n\t\t\tdefaultSorted={ defaultSorted }\n\t\t\tdata={origin}\n\t\t\tpage={ page }\n\t\t\tsizePerPage={ sizePerPage }\n\t\t\ttotalSize={ totalSize }\n\t\t\trowEvents={ selRowEvents }\n\t\t\tonTableChange={ onTableChange }\n\t\t\tContextMenuTrigger={ menuId }\n      \t/>\n\t</div>\n\t);\n}\n\nexport default DataGrid;","import React, { useEffect, useState, useRef, useMemo} from \"react\";\nimport DataGrid from './DataGrid';\nimport PropTypes from 'prop-types';\nimport { useParams } from \"react-router-dom\";\n\n\tDataGrid.propTypes = {\n\t\tmenuId : PropTypes.string.isRequired, \n\t\tmenuItems : PropTypes.array.isRequired, \n\t\tmenuCallBack : PropTypes.func, \n\t\tkeyField : PropTypes.string.isRequired, \n\t\tcolumns : PropTypes.array.isRequired, \n\t\tdefaultSorted : PropTypes.array.isRequired, \n\t\taxiosConfig : PropTypes.object.isRequired, \n\t\tsetSelRow : PropTypes.func\n\t}\n\n  //table grid 구성 columns(id, text, sort, formatter을 통해 데이터 구성), defaultSorted (정렬)\n  const columns = [{\n\tdataField: 'id',\n\ttext: 'Product ID',\n\tsort: true\n  }, {\n\tdataField: 'name',\n\ttext: 'Product Name',\n\tsort: true\n  }, {\n\tdataField: 'price',\n\ttext: 'Product Price',\n\tsort: true,\n\tformatter: function(cell, row){\n\t\tif (row.onSale) {\n\t\t  return (\n\t\t\t<span>\n\t\t\t  <strong style={ { color: 'red' } }>$ { cell } NTD(Sales!!)</strong>\n\t\t\t</span>\n\t\t  );\n\t\t}\n\t  \n\t\treturn (\n\t\t  <span>$ { cell } NTD</span>\n\t\t);\n\t  }\n  }];\n  \n  const defaultSorted = [{\n\tdataField: 'id',\n\torder: 'desc'\n  }];\n\n  //contextMenu 구성 id, items\n  const menuId = \"menuId\";\n\n  const menuItems = [\n\t{\n\t  text:\"등록\",\n\t  data:{action:\"create\"}\t\n  \t},\n  \t{\n\t\ttext:\"수정\",\n\t\tdata:{action:\"update\"}\t\n  \t},\n  \t{\n\t\ttext:\"삭제\",\n\t\tdata:{action:\"delete\"}\t\n  \t}\n];\n\n\nconst Test = () => {\n\n\n\tconst { id } = useParams();\t\n\tconst [loading, setLoading] = useState(true);\n\tconst [coins, setCoins] = useState([]);\n\tuseEffect(() => {\n\t\tconsole.log(\"init rendered\");\n\n\t\tconsole.log(`id : ${id}`);\n\n\t\t// fetch(\"https://api.coinpaprika.com/v1/tickers\")\n\t\t// \t.then((response) => response.json())\n\t\t// \t.then((json) => {\n\t\t// \tsetCoins(json);\n\t\t// \tsetLoading(false);\n\t\t// });\n\n\t\tgetApiCall();\n\n\t}, []);\n\n\tconst getApiCall = async () =>{\n\n\t\tconst response = await fetch(\"https://api.coinpaprika.com/v1/tickers\");\n\t\tconst json = await response.json();\n\t\tsetCoins(json);\n\t\tsetLoading(false);\n\t}\n\n\n\tconst [counter, setCounter] = useState(0);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"counter rendered\", counter);\n\t}, [counter]);\n\n\tconst Button = ({text}) => {\n\t\treturn (\n\t\t<div>\n\t\t\t<h3 style={{color:'red'}}>총클릭 수 : {counter}</h3>\n\t\t\t<button style={{backgroundColor:\"tomato\"}} \n\t\t\t\tonClick={()=> {\n\t\t\t\t\tconsole.log(`클릭 ${counter}`); \n\t\t\t\t\tsetCounter((current) => (current +1));\n\t\t\t\t}\n\t\t\t}>{text}</button>\n\t\t</div>\n\t\t);\n\t};\n\n\tconst inputIdEl = useRef(null);\n\tconst inputPwEl = useRef(null);\n\n\t// contextmenu 클릭 시 선택된 row 값 state로 전달 이후에 처리\n\tconst [selRow, setSelRow] = useState([]);\n\tuseEffect(() => {\n\t\tconsole.log(\"selRow rendered\", selRow);\n\t}, [selRow]);\n\n\tconst menuCallBack = (event, data) => {\n\t\tconsole.log(`clicked`, { event, data, selRow })\n\t\t//console.log(`Clicked on ${selRow.name} menu ${selRow.price}`);\n\n\t\t//메뉴 클릭시 이벤트 처리\n    }\n\n\tconst login = (event) => {\n\t\tevent.preventDefault(); \n\t\n        fetch(\t\t\t\t{\n\t\t\turl:\"/j_spring_security_check\",\n\t\t\tmethod:\"post\",\n\t\t\tparams: {\n\t\t\t\tid: event.target.id.value,\n\t\t\t\tpassword: event.target.password.value\n\t\t\t}\n\t\t})\n\t\t.then(res => {\n\t\t\tconsole.log(res);\n\t\t\tinputIdEl.current.value=\"\";\n\t\t\tinputPwEl.current.value=\"\";\n\t\t\t\n\t\t}).catch(console.error);\t\t\t\n\n    }\n\t\n\tconst logout = (event) => {\n\t\tevent.preventDefault(); \n\n        fetch(\t\t\t\t{\n\t\t\turl:\"/j_spring_security_logout\",\n\t\t\tmethod:\"post\"\n\t\t})\n\t\t.then(res => {\n\t\t\tconsole.log(res);\n\t\t}).catch(console.error);\t\t\t\n\n    }\n\t\n\n\n\t//axios : https://axios-http.com/kr/docs/req_config\n\treturn (\n\t<div>\n\n\t\t<form name=\"formLogin\" id=\"formLogin\" action=\"/j_spring_security_check\" method=\"POST\" onSubmit={login}>\n\t\t\t\t<input type=\"text\" name=\"id\" id=\"id\" ref={inputIdEl} onChange={(e) => console.log(e.target.value)}/>\n\t\t\t\t<input type=\"password\" name=\"password\"  ref={inputPwEl} id=\"password\" onChange={(e) => e} />\n\t\t\t\t<input type=\"submit\" value=\"로그인\" class=\"loginBtn\"/>\n\t\t</form>\t\t\n\n\t\t<form name=\"formLogout\" id=\"formLogin\" action=\"/j_spring_security_logout\" method=\"POST\" onSubmit={logout} >\n\t\t\t\t<input type=\"submit\" value=\"로그아웃\" class=\"loginBtn\"/>\n\t\t</form>\t\t\n\n\t\t<h1>The Coins! {loading ? \"\" : `(${coins.length})`}</h1>\n\t\t{loading ? (\n\t\t\t<strong>Loading...</strong>\n\t\t) : (\n\t\t\t<select>\n\t\t\t{coins.map((coin) => (\n\t\t\t\t<option>\n\t\t\t\t{coin.name} ({coin.symbol}): ${coin.quotes.USD.price} USD\n\t\t\t\t</option>\n\t\t\t))}\n\t\t\t</select>\n\t\t)}\n\n\t\t{loading && (\n\t\t\t<h1>The Coins! {loading ? \"\" : `(${coins.length})`}</h1>\n\t\t)}\n\t\t{!loading && (\n\t\t\t<div>\n\t\t\t\t<h1>The Coins! {loading ? \"\" : `(${coins.filter((coin,i) => (i%2==0 && coin.quotes.USD.price>1) ).length})`}</h1>\n\t\t\t\t<select>\n\t\t\t\t{coins.filter((coin,i) => (i%2==0 && coin.quotes.USD.price>1) ).map((coin,i) => (\n\t\t\t\t\t<option>\n\t\t\t\t\t{i+1} {coin.name} ({coin.symbol}): ${coin.quotes.USD.price} USD\t\t\t\t\t\t\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t)}\n\n\t\t<Button text=\"클릭해주세요\"/>\n\t\t<DataGrid \n\t\t\tmenuId={menuId}\n\t\t\tmenuItems={menuItems}\n\t\t\tmenuCallBack={menuCallBack}\n\t\t\t\n\t\t\tkeyField=\"id\"\n\t\t\tcolumns={columns}\n\t\t\tdefaultSorted={defaultSorted}\n\t\t\taxiosConfig={\n\t\t\t\t{\n\t\t\t\t\turl:\"/admin/management/member/list.ajax\",\n\t\t\t\t\tmethod:\"post\",\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tfirstName: 'Fred',\n\t\t\t\t\t\tlastName: 'Flintstone'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetSelRow={setSelRow}\n\t\t/>\n\n\t</div>\n\t);\n}\n\n\nexport default Test;","import React, { Component } from \"react\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport MainComponent from './MainComponent';\nimport DashboardComponent from './DashboardComponent';\n\nimport TestComponent from './TestComponent';\nimport MemberComponent from './MemberComponent';\nimport Test from './Test';\n\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\nclass TopMenuComponent extends Component {\n    render() {\n\n        const hstyle = {\n            color: \"black\",\n            backgroundColor: \"white\"\n          }\n\n        return (\n            <Router>\n                <Navbar\n                    bg=\"dark\"\n                    variant=\"dark\"\n                    className=\"mb-4\" >\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"./home\" style={hstyle}>Home</Nav.Link>\n                        <Nav.Link href=\"./detail/123\" style={hstyle}>Detail</Nav.Link>\n                        <Nav.Link href=\"./test\" style={{color:\"red\", backgroundColor: \"blue\"}}>테스트</Nav.Link>\n\n                        \n                        <NavDropdown title=\"기획마케팅\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"/member\">회원관리</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/\">작업공유(마케팅)</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/\">MySearch 관리</NavDropdown.Item>\n\n                            <NavDropdown.Divider />\n                            <NavDropdown className=\"dropdown-item dropdownMenu\" title=\"작업게시판\" id=\"basic-nav-dropdown2\">\n                            <NavDropdown.Item href=\"/\">공지사항</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/\">뉴스</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/\">블로그</NavDropdown.Item>\n                            </NavDropdown>\n\n                            <NavDropdown.Divider />\n                            <NavDropdown className=\"dropdown-item dropdownMenu\" title=\"리포트 데이타\" id=\"basic-nav-dropdown2\">\n                            <NavDropdown.Item href=\"/\">업로드 현황</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/\">구매 현황</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/\">다운로드 현황</NavDropdown.Item>\n                            </NavDropdown>\n                        </NavDropdown>\n                    </Nav>\n                    </Navbar.Collapse>                    \n\n                </Navbar>\n                <Switch>\n                    <Route exact path=\"/\">Welcome</Route>\n                    <Route path=\"/home\" component={Test} />\n                    <Route path=\"/detail/:id\" component={Test} />\n                    <Route path=\"/main\" component={MainComponent} />\n                    <Route path=\"/test\" component={TestComponent} />\n                    <Route path=\"/dashboard\" component={DashboardComponent} />\n\n                    <Route path=\"/member\" component={MemberComponent} />\n\n                    <Route path=\"/\">Not found</Route>\n                </Switch>\n\n            </Router>\n        );\n    }\n}\n\nexport default TopMenuComponent;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TopMenuComponent from \"./components/TopMenuComponent\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopMenuComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './common.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}